name: Create Cluster

on:
  - pull_request

jobs:
  create-cluster:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build docker image locally
        uses: docker/build-push-action@v2
        with:
          context: ./engine
          file: ./engine/Dockerfile
          push: false
          load: true
          tags: oncall/engine:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.3.0
        with:
          config: ./helm/ci/kind.yml

      - name: Load image on the nodes of the cluster
        run: kind load docker-image --name=chart-testing oncall/engine:latest

      - name: Install helm chart
        run: helm install test-release helm/oncall --values helm/ci/simple.yml

      - name: Await k8s pods and other resources up
        uses: jupyterhub/action-k8s-await-workloads@v1
        with:
          workloads: "" # all
          namespace: "" # default
          timeout: 300
          max-restarts: 0

      - name: Ping
        run: curl http://localhost:30001

      - name: Bootstrap organization
        run: |
          export POD_NAME=$(kubectl get pods --namespace default -l "app.kubernetes.io/name=oncall,app.kubernetes.io/instance=test-release,app.kubernetes.io/component=engine" -o jsonpath="{.items[0].metadata.name}")
          export ONCALL_INTEGRATION_URL=http://localhost:30001$(kubectl exec -it $POD_NAME -- bash -c "python manage.py create_org_integration_for_e2e_test")

      - name: Debug
        run: |
          echo $ONCALL_INTEGRATION_URL
          export TEST_ID=test-0

      - name: Run local k6 test
        uses: grafana/k6-action@v0.2.0
        with:
          filename: helm/ci/k6new.js

      # GitHub Action reference: https://github.com/jupyterhub/action-k8s-namespace-report
      - name: Kubernetes namespace report
        uses: jupyterhub/action-k8s-namespace-report@v1
        if: always()
      # with:
      #   namespace: my-namespace
      #   pod-selector: app.kubernetes.io/component notin (secret-server,boring-server)
      #   important-workloads: deploy/my-deployment sts/my-statefulset