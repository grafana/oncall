name: On pull requests

on:
  pull_request:
  # You can use the merge_group event to trigger your GitHub Actions workflow when
  # a pull request is added to a merge queue
  # https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue#triggering-merge-group-checks-with-github-actions
  merge_group:

concurrency:
  # Cancel any running workflow for the same branch when new commits are pushed.
  # We group both by ref_name (available when CI is triggered by a push to a branch/tag)
  # and head_ref (available when CI is triggered by a PR).
  group: "${{ github.ref_name }}-${{ github.head_ref }}"
  cancel-in-progress: true

jobs:
  # linting-and-tests:
  #   name: Linting and tests
  #   uses: ./.github/workflows/linting-and-tests.yml

  # snyk-security-scan:
  #   name: Snyk security scan
  #   uses: ./.github/workflows/snyk-security-scan.yml
  #   secrets: inherit

  get-irm-app-token:
    runs-on: ubuntu-latest
    outputs:
      token: ${{ steps.generate-token.outputs.token }}
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Get Vault secrets
        id: get-secrets
        uses: grafana/shared-workflows/actions/get-vault-secrets@main
        with:
          repo_secrets: |
            GH_APP_ID=github-app:app-id
            GH_APP_PRIVATE_KEY=github-app:private-key

      - name: Generate Github App token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ env.GH_APP_ID }}
          private-key: ${{ env.GH_APP_PRIVATE_KEY }}
          owner: grafana
          repositories: "helm-charts"

  call-update-helm-repo:
    uses: grafana/helm-charts/.github/workflows/update-helm-repo.yaml@main
    needs:
      - get-irm-app-token
    with:
      charts_dir: helm
      cr_configfile: helm/cr.yaml
      ct_configfile: helm/ct.yaml
    secrets:
      helm_repo_token: ${{ needs.get-irm-app-token.outputs.token }}
