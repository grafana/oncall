# HELM_PREFIX must be "oncall-dev" as it is hardcoded in dev/helm-local.yml
HELM_PREFIX="oncall-dev"
# Use docker registery generated by ctlptl (dev/kind-config.yaml)
DOCKER_REGISTRY="localhost:63628/"

allow_k8s_contexts(["kind-kind"])

docker_build("localhost:63628/oncall/engine:dev", "./engine", target = 'prod')
docker_build("localhost:63628/oncall/ui:dev", "./grafana-plugin", dockerfile = './grafana-plugin/Dockerfile.dev')

yaml = helm(
  'helm/oncall',
  name=HELM_PREFIX,
  values=['./dev/helm-local.yml'])

k8s_yaml(yaml)

k8s_resource(workload='grafana', port_forwards="3000:3000", resource_deps=['mariadb', 'engine', 'oncall-ui'], labels=['Grafana'])
k8s_resource(workload='oncall-ui', labels=['OnCallUI'])
k8s_resource(workload='celery', resource_deps=['mariadb', 'redis-master'], labels=['OnCallBackend'])
k8s_resource(workload='engine', port_forwards=8080, resource_deps=['mariadb', 'redis-master'], labels=['OnCallBackend'])
k8s_resource(workload='redis-master', labels=['OnCallDeps'])
k8s_resource(workload='mariadb', labels=['OnCallDeps'])


# name all tilt resources after the k8s object namespace + name
def resource_name(id):
  return id.name.replace(HELM_PREFIX + '-', '')

workload_to_resource_function(resource_name)
