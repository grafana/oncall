suite: test postgresql password deployment environments
release:
  name: oncall
templates:
  - engine/deployment.yaml
  - engine/job-migrate.yaml
  - celery/deployment-celery.yaml
  - secrets.yaml
tests:
  - it: should fail if externalPostgresql.password not set
    set:
      database.type: postgresql
      postgresql.enabled: false
    asserts:
      - failedTemplate:
          errorMessage: externalPostgresql.password is required if not postgresql.enabled and not externalPostgresql.existingSecret
        template: secrets.yaml

  - it: externalPostgresql.password should create Secret -postgresql-external
    templates:
      - engine/deployment.yaml
      - engine/job-migrate.yaml
      - celery/deployment-celery.yaml
    set:
      database.type: postgresql
      postgresql.enabled: false
      externalPostgresql:
        password: abcd123
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: oncall-postgresql-external
                key: postgres-password
      - containsDocument:
          kind: Secret
          apiVersion: v1
          name: oncall-postgresql-external
        template: secrets.yaml
      - equal:
          path: data.postgres-password
          value: abcd123
          decodeBase64: true
        documentIndex: 1
        template: secrets.yaml

  - it: externalPostgresql.existingSecret should use existing secret
    templates:
      - engine/deployment.yaml
      - engine/job-migrate.yaml
      - celery/deployment-celery.yaml
    set:
      database.type: postgresql
      postgresql.enabled: false
      externalPostgresql:
        existingSecret: some-postgres-secret
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: some-postgres-secret
                key: postgres-password

  - it: externalPostgresql.passwordKey should be used for existing secret
    templates:
      - engine/deployment.yaml
      - engine/job-migrate.yaml
      - celery/deployment-celery.yaml
    set:
      database.type: postgresql
      postgresql.enabled: false
      externalPostgresql:
        existingSecret: some-postgres-secret
        passwordKey: postgres.key
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: some-postgres-secret
                key: postgres.key

  - it: internal Postgresql custom settings
    templates:
      - engine/deployment.yaml
      - engine/job-migrate.yaml
      - celery/deployment-celery.yaml
    set:
      database.type: postgresql
      postgresql:
        enabled: true
        auth:
          database: grafana_oncall
          username: grafana_oncall
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: oncall-postgresql
                key: password

