# Generated by Django 3.2.5 on 2022-06-30 13:43

from django.db import migrations


def reformat_manual_incidents_payload(apps, schema_editor):
    Alert = apps.get_model("alerts", "Alert")
    alerts = Alert.objects.filter(group__channel__integration="manual")
    alerts_to_update = []
    for idx, alert in enumerate(alerts):
        alert.raw_request_data = _modify_payload(alert)
        alerts_to_update.append(alert)
    Alert.objects.bulk_update(alerts_to_update, ["raw_request_data"], batch_size=5000)


def _modify_payload(alert):
    payload = alert.raw_request_data
    metadata = payload.get("view", {}).get("private_metadata", {})
    payload["oncall"] = {}
    if "message" in metadata:
        # If alert was made from message
        domain = payload.get("team", {}).get("domain", "unknown")
        channel_id = metadata.get("channel_id", "unknown")
        message = metadata.get("message", {})
        message_ts = message.get("ts", "unknown")
        message_text = message.get("text", "unknown")
        payload["oncall"]["permalink"] = f"https://{domain}.slack.com/archives/{channel_id}/p{message_ts}"
        payload["oncall"]["author_username"] = metadata.get("author_username", "Unknown")
        payload["oncall"]["title"] = "Message from @" + payload["oncall"]["author_username"]
        payload["oncall"]["message"] = message_text
    else:
        # If alert was made via slash command
        message_text = payload.get("view", {}).get("state", {}).get("values", {}).get("MESSAGE_INPUT", {}).get(
            "FinishCreateIncidentViewStep", {}).get("value", "unknown")
        payload["oncall"]["permalink"] = None
        payload["oncall"]["title"] = alert.title
        payload["oncall"]["message"] = message_text

        created_by = alert.integration_unique_data.get("created_by", None)
        username = payload.get("user", {}).get("name", None)
        author_username = created_by or username or "unknown"
        payload["oncall"]["author_username"] = author_username

    return payload


class Migration(migrations.Migration):
    dependencies = [
        ('alerts', '0003_grafanaalertingcontactpoint_datasource_uid'),
    ]

    operations = [
        migrations.RunPython(reformat_manual_incidents_payload, migrations.RunPython.noop)
    ]
