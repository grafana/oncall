// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PluginConfigPage If onCallApiUrl is not set in the plugin's meta jsonData, and ONCALL_API_URL is passed in process.env, and there is an error calling selfHostedInstallPlugin, it sets an error message 1`] = `
<div>
  <legend
    class="css-1w9pvsj"
  >
    Configure Grafana OnCall
  </legend>
  <p>
    This page will help you configure the OnCall plugin ðŸ‘‹
  </p>
  <pre
    data-testid="status-message-block"
  >
    <span
      class="root text text--undefined text--medium"
    >
      ohhh nooo an error msg from self hosted install plugin
    </span>
  </pre>
  <div
    class="css-ffyaiw-horizontal-group"
    style="width: 100%; height: 100%;"
  >
    <div
      class="css-18qv8yz-layoutChildrenWrapper"
    >
      <button
        class="css-td06pi-button"
        type="button"
      >
        <span
          class="css-1riaxdn"
        >
          Retry Sync
        </span>
      </button>
    </div>
    <div
      class="css-18qv8yz-layoutChildrenWrapper"
    >
      <button
        class="css-ttl745-button"
        type="button"
      >
        <span
          class="css-1riaxdn"
        >
          Remove current configuration
        </span>
      </button>
    </div>
  </div>
</div>
`;

exports[`PluginConfigPage If onCallApiUrl is not set in the plugin's meta jsonData, or in process.env, updatePluginStatus is not called, and the configuration form is shown 1`] = `
<div>
  <legend
    class="css-1w9pvsj"
  >
    Configure Grafana OnCall
  </legend>
  <p>
    This page will help you configure the OnCall plugin ðŸ‘‹
  </p>
  <form
    class="css-1srg48i"
    data-testid="plugin-configuration-form"
  >
    <div
      class="info-block"
    >
      <p>
        1. Launch the OnCall backend
      </p>
      <span
        class="root text text--secondary text--medium"
      >
        Run hobby, dev or production backend. See
         
        <a
          href="https://github.com/grafana/oncall#getting-started"
          rel="noreferrer"
          target="_blank"
        >
          <span
            class="root text text--link text--medium"
          >
            here
          </span>
        </a>
         
        on how to get started.
      </span>
    </div>
    <div
      class="info-block"
    >
      <p>
        2. Let us know the base URL of your OnCall API
      </p>
      <span
        class="root text text--secondary text--medium"
      >
        The OnCall backend must be reachable from your Grafana installation. Some examples are:
        <br />
        - http://host.docker.internal:8080
        <br />
        - http://localhost:8080
      </span>
    </div>
    <div
      class="css-1rplq84"
    >
      <div
        class="css-l4ykjo-Label"
      >
        <label>
          <div
            class="css-70qvj9"
          >
            OnCall backend URL
          </div>
        </label>
      </div>
      <div>
        <div>
          <div
            class="css-1cvb0sk-input-wrapper"
            data-testid="input-wrapper"
          >
            <div
              class="css-10lnb82-input-inputWrapper"
            >
              <input
                class="css-8tk2dk-input-input"
                data-testid="onCallApiUrl"
                name="onCallApiUrl"
              />
            </div>
          </div>
        </div>
      </div>
    </div>
    <button
      class="css-td06pi-button"
      type="submit"
    >
      <span
        class="css-1riaxdn"
      >
        Connect
      </span>
    </button>
  </form>
</div>
`;

exports[`PluginConfigPage If onCallApiUrl is set, and updatePluginStatus returns an error, it sets an error message 1`] = `
<div>
  <legend
    class="css-1w9pvsj"
  >
    Configure Grafana OnCall
  </legend>
  <p>
    This page will help you configure the OnCall plugin ðŸ‘‹
  </p>
  <pre
    data-testid="status-message-block"
  >
    <span
      class="root text text--undefined text--medium"
    >
      ohhh nooo a plugin connection error
    </span>
  </pre>
  <div
    class="css-ffyaiw-horizontal-group"
    style="width: 100%; height: 100%;"
  >
    <div
      class="css-18qv8yz-layoutChildrenWrapper"
    >
      <button
        class="css-td06pi-button"
        type="button"
      >
        <span
          class="css-1riaxdn"
        >
          Retry Sync
        </span>
      </button>
    </div>
    <div
      class="css-18qv8yz-layoutChildrenWrapper"
    >
      <button
        class="css-ttl745-button"
        type="button"
      >
        <span
          class="css-1riaxdn"
        >
          Remove current configuration
        </span>
      </button>
    </div>
  </div>
</div>
`;

exports[`PluginConfigPage It doesn't make any network calls if the plugin configured query params are provided 1`] = `
<div>
  <legend
    class="css-1w9pvsj"
  >
    Configure Grafana OnCall
  </legend>
  <pre
    data-testid="status-message-block"
  >
    <span
      class="root text text--undefined text--medium"
    >
      Connected to OnCall (v1.2.3, OpenSource)
    </span>
  </pre>
  <div
    class="css-ffyaiw-horizontal-group"
    style="width: 100%; height: 100%;"
  >
    <div
      class="css-18qv8yz-layoutChildrenWrapper"
    >
      <a
        class="css-td06pi-button"
        href="/a/grafana-oncall-app/"
        tabindex="0"
      >
        <span
          class="css-1riaxdn"
        >
          Open Grafana OnCall
        </span>
      </a>
    </div>
    <div
      class="css-18qv8yz-layoutChildrenWrapper"
    >
      <button
        class="css-ttl745-button"
        type="button"
      >
        <span
          class="css-1riaxdn"
        >
          Remove current configuration
        </span>
      </button>
    </div>
  </div>
</div>
`;

exports[`PluginConfigPage OnCallApiUrl is set, and checkTokenAndIfPluginIsConnected does not return an error. It displays properly the plugin connected items based on the license - License: OpenSource 1`] = `
<div>
  <legend
    class="css-1w9pvsj"
  >
    Configure Grafana OnCall
  </legend>
  <pre
    data-testid="status-message-block"
  >
    <span
      class="root text text--undefined text--medium"
    >
      Connected to OnCall (v1.2.3, OpenSource)
    </span>
  </pre>
  <div
    class="css-ffyaiw-horizontal-group"
    style="width: 100%; height: 100%;"
  >
    <div
      class="css-18qv8yz-layoutChildrenWrapper"
    >
      <a
        class="css-td06pi-button"
        href="/a/grafana-oncall-app/"
        tabindex="0"
      >
        <span
          class="css-1riaxdn"
        >
          Open Grafana OnCall
        </span>
      </a>
    </div>
    <div
      class="css-18qv8yz-layoutChildrenWrapper"
    >
      <button
        class="css-ttl745-button"
        type="button"
      >
        <span
          class="css-1riaxdn"
        >
          Remove current configuration
        </span>
      </button>
    </div>
  </div>
</div>
`;

exports[`PluginConfigPage OnCallApiUrl is set, and checkTokenAndIfPluginIsConnected does not return an error. It displays properly the plugin connected items based on the license - License: some-other-license 1`] = `
<div>
  <legend
    class="css-1w9pvsj"
  >
    Configure Grafana OnCall
  </legend>
  <pre
    data-testid="status-message-block"
  >
    <span
      class="root text text--undefined text--medium"
    >
      Connected to OnCall (v1.2.3, some-other-license)
    </span>
  </pre>
  <div
    class="css-gjl87o-vertical-group"
    style="width: 100%; height: 100%;"
  >
    <div
      class="css-gxt817-layoutChildrenWrapper"
    >
      <div
        class="css-l4ykjo-Label"
      >
        <label>
          <div
            class="css-70qvj9"
          >
            This is a cloud managed configuration.
          </div>
        </label>
      </div>
    </div>
    <div
      class="css-gxt817-layoutChildrenWrapper"
    >
      <a
        class="css-td06pi-button"
        href="/a/grafana-oncall-app/"
        tabindex="0"
      >
        <span
          class="css-1riaxdn"
        >
          Open Grafana OnCall
        </span>
      </a>
    </div>
  </div>
</div>
`;

exports[`PluginConfigPage OnCallApiUrl is set, and checkTokenAndIfPluginIsConnected returns an error 1`] = `
<div>
  <legend
    class="css-1w9pvsj"
  >
    Configure Grafana OnCall
  </legend>
  <p>
    This page will help you configure the OnCall plugin ðŸ‘‹
  </p>
  <pre
    data-testid="status-message-block"
  >
    <span
      class="root text text--undefined text--medium"
    >
      ohhh noooo a sync issue
    </span>
  </pre>
  <div
    class="css-ffyaiw-horizontal-group"
    style="width: 100%; height: 100%;"
  >
    <div
      class="css-18qv8yz-layoutChildrenWrapper"
    >
      <button
        class="css-td06pi-button"
        type="button"
      >
        <span
          class="css-1riaxdn"
        >
          Retry Sync
        </span>
      </button>
    </div>
    <div
      class="css-18qv8yz-layoutChildrenWrapper"
    >
      <button
        class="css-ttl745-button"
        type="button"
      >
        <span
          class="css-1riaxdn"
        >
          Remove current configuration
        </span>
      </button>
    </div>
  </div>
</div>
`;

exports[`PluginConfigPage Plugin reset: successful - false 1`] = `
<div>
  <legend
    class="css-1w9pvsj"
  >
    Configure Grafana OnCall
  </legend>
  <p>
    This page will help you configure the OnCall plugin ðŸ‘‹
  </p>
  <pre
    data-testid="status-message-block"
  >
    <span
      class="root text text--undefined text--medium"
    >
      There was an error resetting your plugin, try again.
    </span>
  </pre>
  <div
    class="css-ffyaiw-horizontal-group"
    style="width: 100%; height: 100%;"
  >
    <div
      class="css-18qv8yz-layoutChildrenWrapper"
    >
      <button
        class="css-td06pi-button"
        type="button"
      >
        <span
          class="css-1riaxdn"
        >
          Retry Sync
        </span>
      </button>
    </div>
    <div
      class="css-18qv8yz-layoutChildrenWrapper"
    >
      <button
        class="css-ttl745-button"
        type="button"
      >
        <span
          class="css-1riaxdn"
        >
          Remove current configuration
        </span>
      </button>
    </div>
  </div>
</div>
`;

exports[`PluginConfigPage Plugin reset: successful - true 1`] = `
<div>
  <legend
    class="css-1w9pvsj"
  >
    Configure Grafana OnCall
  </legend>
  <p>
    This page will help you configure the OnCall plugin ðŸ‘‹
  </p>
  <form
    class="css-1srg48i"
    data-testid="plugin-configuration-form"
  >
    <div
      class="info-block"
    >
      <p>
        1. Launch the OnCall backend
      </p>
      <span
        class="root text text--secondary text--medium"
      >
        Run hobby, dev or production backend. See
         
        <a
          href="https://github.com/grafana/oncall#getting-started"
          rel="noreferrer"
          target="_blank"
        >
          <span
            class="root text text--link text--medium"
          >
            here
          </span>
        </a>
         
        on how to get started.
      </span>
    </div>
    <div
      class="info-block"
    >
      <p>
        2. Let us know the base URL of your OnCall API
      </p>
      <span
        class="root text text--secondary text--medium"
      >
        The OnCall backend must be reachable from your Grafana installation. Some examples are:
        <br />
        - http://host.docker.internal:8080
        <br />
        - http://localhost:8080
      </span>
    </div>
    <div
      class="css-1rplq84"
    >
      <div
        class="css-l4ykjo-Label"
      >
        <label>
          <div
            class="css-70qvj9"
          >
            OnCall backend URL
          </div>
        </label>
      </div>
      <div>
        <div>
          <div
            class="css-1cvb0sk-input-wrapper"
            data-testid="input-wrapper"
          >
            <div
              class="css-10lnb82-input-inputWrapper"
            >
              <input
                class="css-8tk2dk-input-input"
                data-testid="onCallApiUrl"
                name="onCallApiUrl"
              />
            </div>
          </div>
        </div>
      </div>
    </div>
    <button
      class="css-td06pi-button"
      type="submit"
    >
      <span
        class="css-1riaxdn"
      >
        Connect
      </span>
    </button>
  </form>
</div>
`;
